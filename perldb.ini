#!perl

use DB::Pluggable;
use Hook::Modular::Builder;

warn "Loading ...\n";

my @commands = ();
my $db_commands_file = $ENV{TEMP}."/db_commands";
if($ENV{TEMP} && -f $db_commands_file) {
    warn "TEMP\\db_commands found ...\n";
    open(my $I,$db_commands_file);
    @commands = map { chomp; tr{"}{}d; s/\s+$//g; $_ } <$I>;
    close($I);
    unlink($db_commands_file);
}

my $config = builder {
    log_level 'error';
    enable 'Dumper';
    enable 'TypeAhead', type => [
        '{l',
        'use Data::Dump qw(dumpf dump)',
        '*::f = sub { print dumpf(shift, sub { my ($c,$r)=@_; return if!$c->class; $r->isa("SMV::Element") ? {dump=>qq($r)} : undef }); }',
        @commands
    ];
};

$DB::PluginHandler = DB::Pluggable->new(config => $config);
$DB::PluginHandler->run;

=head1 Notes on perldb.ini

It is looked up in current directory, then in %HOME%.  On Windows, just define
HOME with

    set HOME=D:\Util

Moreover, it needs to be read only. After your editing, just do

    attrib +r perldb.ini

Several modules need to be installed, so

    ppm install DB-Pluggable
    ppm install DB-Pluggable-Dumper
    ppm install DB-Pluggable-StackTraceAsHTML

Some code can be execute prior user is let to write anything, the code
can be put into %TEMP%\db_commands file by any means.

=cut
